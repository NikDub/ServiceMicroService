// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceMicroService.Infrastructure;

#nullable disable

namespace ServiceMicroService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221221113639_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeSlotSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "4050f457-6642-4bd6-b113-d2a9ad92af56",
                            CategoryName = "Consultations",
                            TimeSlotSize = 10
                        },
                        new
                        {
                            Id = "c47124fa-96d5-4534-bc1e-2dc81bdfdc6b",
                            CategoryName = "Diagnostics",
                            TimeSlotSize = 10
                        },
                        new
                        {
                            Id = "8a8abd81-222a-4c27-a414-43dff95e6549",
                            CategoryName = "Analyses",
                            TimeSlotSize = 10
                        });
                });

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecializationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Specialization", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SpecializationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Service", b =>
                {
                    b.HasOne("ServiceMicroService.Domain.Entities.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ServiceMicroService.Domain.Entities.Models.Specialization", "Specialization")
                        .WithMany("Services")
                        .HasForeignKey("SpecializationId");

                    b.Navigation("Category");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("ServiceMicroService.Domain.Entities.Models.Specialization", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
